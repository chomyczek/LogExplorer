<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:models="clr-namespace:LogExplorer.Models"
                    xmlns:tlv="clr-namespace:SampleApplication;assembly=TreeListView"
                    xmlns:views="clr-namespace:MvvmCross.Wpf.Views;assembly=MvvmCross.Wpf"
                    xmlns:controls="clr-namespace:LogExplorer.Customs.Controls">

	<Style x:Key="OverviewBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="-6, 0 " />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="0.5" />
		<Setter Property="Padding" Value="3, 0" />
		<Setter Property="MinHeight" Value="25" />
		<Setter Property="Background" Value="{Binding Log.ResultColor}" />
	</Style>
	<Style x:Key="LogBorderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource OverviewBorderStyle}">
		<Setter Property="Background" Value="{Binding ResultColor}" />
	</Style>
	<Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="Height" Value="25" />
		<Setter Property="Padding" Value="0, 5" />
	</Style>
	<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
		<Setter Property="Background" Value="Black" />
	</Style>

	<!--Restore default header style-->
	<Style TargetType="{x:Type GridViewColumnHeader}" />

	<!--Look of expander button-->
	<Style TargetType="{x:Type ToggleButton}" >
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border BorderBrush="Black" 
                                Background="{TemplateBinding Background}" BorderThickness="0.5">
						<TextBlock Text=">" Padding="1, -4"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="Black" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<tlv:TreeListView x:Key="LogsTree" AllowsColumnReorder="True" ItemsSource="{Binding .}">

		<!--Create an item template to specify the ItemsSource-->
		<tlv:TreeListView.ItemTemplate>
			<HierarchicalDataTemplate DataType="{x:Type models:LogOverview}" ItemsSource="{Binding History}" />
		</tlv:TreeListView.ItemTemplate>

		<tlv:TreeListView.Columns>

			<!--Create the first column containing the expand button and the name.-->
			<GridViewColumn Header="Name" Width="{StaticResource NameWidth}">
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding}">
							<ContentControl.Resources>
								<DataTemplate DataType="{x:Type models:LogOverview}">
									<Border Style="{StaticResource OverviewBorderStyle}">
										<StackPanel Orientation="Horizontal">
											<!--The Expander Button (can be used in any column (typically the first one))-->
											<tlv:TreeListViewExpander/>
											<CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Log.IsSelected, Mode=TwoWay}" />
											<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Log.Name}" />
										</StackPanel>
									</Border>
								</DataTemplate>
								<DataTemplate DataType="{x:Type models:Log}">
									<Border Style="{StaticResource LogBorderStyle}" Background="LightGray">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text=" ∟" />
											<CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding IsSelected, Mode=TwoWay}" />
											<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Name}"/>
										</StackPanel>
									</Border>
								</DataTemplate>
							</ContentControl.Resources>
						</ContentControl>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>

			<!--Create a Last Result column.-->
			<GridViewColumn Header="Last Result" Width="{StaticResource ResultWidth}">
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding}">
							<ContentControl.Resources>
								<DataTemplate DataType="{x:Type models:LogOverview}">
									<Border Style="{StaticResource OverviewBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Log.Result}" />
									</Border>
								</DataTemplate>
								<DataTemplate DataType="{x:Type models:Log}">
									<Border Style="{StaticResource LogBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Result}" />
									</Border>
								</DataTemplate>
							</ContentControl.Resources>
						</ContentControl>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>

			<!--Create a Start Time column.-->
			<GridViewColumn Header="Start Time" Width="{StaticResource StartTimeWidth}">
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding}">
							<ContentControl.Resources>
								<DataTemplate DataType="{x:Type models:LogOverview}">
									<Border Style="{StaticResource OverviewBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Log.StartTimeString}" />
									</Border>
								</DataTemplate>
								<DataTemplate DataType="{x:Type models:Log}">
									<Border Style="{StaticResource LogBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding StartTimeString}" />
									</Border>
								</DataTemplate>
							</ContentControl.Resources>
						</ContentControl>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>

			<!--Create a Duration column.-->
			<GridViewColumn Header="Duration" Width="{StaticResource DurationWidth}">
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding}">
							<ContentControl.Resources>
								<DataTemplate DataType="{x:Type models:LogOverview}">
									<Border Style="{StaticResource OverviewBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Log.DurationString}" />
									</Border>
								</DataTemplate>
								<DataTemplate DataType="{x:Type models:Log}">
									<Border Style="{StaticResource LogBorderStyle}">
										<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding DurationString}" />
									</Border>
								</DataTemplate>
							</ContentControl.Resources>
						</ContentControl>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>

			<!--Create a Commands column.-->
			<GridViewColumn Header="Commands" Width="{StaticResource CommandsWidth}">
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<ContentControl Content="{Binding}">
								<ContentControl.Resources>

									<!--LogOverview commands template-->
									<DataTemplate DataType="{x:Type models:LogOverview}">
										<Border Style="{StaticResource OverviewBorderStyle}">
											<StackPanel Orientation="Horizontal">
												<Button Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding Log.LogPath}" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource ShowLogIco}"/>
														<TextBlock Text="Show log" />
													</StackPanel>
												</Button>
												<Button Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding Log.DirPath}"
												        Margin="5,0,0,0" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource ShowDirIco}"/>
														<TextBlock Text="Show dir" />
													</StackPanel>
												</Button>
												<Button Command="{Binding DataContext.CmdRerun, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        IsEnabled="{Binding DataContext.IsRerunAvailable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding Log}"
												        Margin="5,0,0,0" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource RerunIco}"/>
														<TextBlock Text="Rerun" />
													</StackPanel>
												</Button>
											</StackPanel>
										</Border>
									</DataTemplate>

									<!--Log commands template-->
									<DataTemplate DataType="{x:Type models:Log}">
										<Border Style="{StaticResource LogBorderStyle}">
											<StackPanel Orientation="Horizontal">
												<Button Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding LogPath}" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource ShowLogIco}"/>
														<TextBlock Text="Show log" />
													</StackPanel>
												</Button>
												<Button Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding DirPath}"
												        Margin="5,0,0,0" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource ShowDirIco}"/>
														<TextBlock Text="Show dir" />
													</StackPanel>
												</Button>
												<Button Command="{Binding DataContext.CmdDeleteOne, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding .}"
												        Background="IndianRed"
												        Margin="5,0,0,0" >
													<StackPanel Orientation="Horizontal">
														<controls:Icon Data="{StaticResource DeleteIco}"/>
														<TextBlock Text="Delete" />
													</StackPanel>
												</Button>
											</StackPanel>
										</Border>
									</DataTemplate>

								</ContentControl.Resources>
							</ContentControl>
						</StackPanel>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
		</tlv:TreeListView.Columns>
	</tlv:TreeListView>
</ResourceDictionary>