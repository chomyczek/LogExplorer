<views:MvxWpfView x:Class="LogExplorer.Views.RootView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:local="clr-namespace:LogExplorer.Views"
                  xmlns:views="clr-namespace:MvvmCross.Wpf.Views;assembly=MvvmCross.Wpf"
                  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                  xmlns:models="clr-namespace:LogExplorer.Models"
                  xmlns:tlv="clr-namespace:SampleApplication;assembly=TreeListView"
                  mc:Ignorable="d"
                  d:DesignHeight="300" d:DesignWidth="1000">

	<views:MvxWpfView.Resources>
		<GridLength x:Key="SelectWidth">15</GridLength>
		<GridLength x:Key="NameWidth">350</GridLength>
		<GridLength x:Key="PlaceholderWidth">18</GridLength>
		<GridLength x:Key="ResultWidth">100</GridLength>
		<GridLength x:Key="StartTimeWidth">150</GridLength>
		<GridLength x:Key="DurationWidth">70</GridLength>
		<GridLength x:Key="CommandsWidth">200</GridLength>

		<!-- TreeGrid "Control" -->
		<Border x:Key="LogsTree" BorderBrush="Black" BorderThickness="1">
			<Border.Resources>
				<Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
					<Setter Property="Margin" Value="3 0 3 0" />
				</Style>
				<Style x:Key="TextBlockBoldStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">
					<Setter Property="FontWeight" Value="Bold" />
				</Style>
			</Border.Resources>

			<!-- Content -->
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>

				<!-- Column headers -->
				<TreeViewItem Grid.Row="0" BorderThickness="1">
					<TreeViewItem.Header>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="{StaticResource SelectWidth}" />
								<ColumnDefinition Width="{StaticResource NameWidth}" />
								<!-- Placeholders for column of ToggleButton -->
								<ColumnDefinition Width="{StaticResource PlaceholderWidth}" />
								<ColumnDefinition Width="{StaticResource ResultWidth}" />
								<ColumnDefinition Width="{StaticResource StartTimeWidth}" />
								<ColumnDefinition Width="{StaticResource DurationWidth}" />
								<ColumnDefinition Width="{StaticResource CommandsWidth}" />
							</Grid.ColumnDefinitions>

							<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
								<TextBlock
									Text="{Binding DataContext.FilterCounter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
									Style="{StaticResource TextBlockBoldStyle}" />
								<TextBlock Text="Name" Style="{StaticResource TextBlockBoldStyle}" />
							</StackPanel>

							<!-- Empty TreeViewItem to measure the size of its ToggleButton into the "Toggle" group-->
							<TreeViewItem Grid.Row="0" Grid.Column="2" Padding="0" />
							<TextBlock Grid.Row="0" Grid.Column="3" Text="Last Result" Style="{StaticResource TextBlockBoldStyle}" />
							<TextBlock Grid.Row="0" Grid.Column="4" Text="Start Time" Style="{StaticResource TextBlockBoldStyle}" />
							<TextBlock Grid.Row="0" Grid.Column="5" Text="Duration" Style="{StaticResource TextBlockBoldStyle}" />
							<TextBlock Grid.Row="0" Grid.Column="6" Text="Commands" Style="{StaticResource TextBlockBoldStyle}" />


							<xctk:WatermarkTextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
							                       Text="{Binding DataContext.SrchName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}">
								<xctk:WatermarkTextBox.Watermark>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{StaticResource NameWidth}" />
										</Grid.ColumnDefinitions>
										<TextBlock TextAlignment="Right" Text="Filter by name.." />
									</Grid>
								</xctk:WatermarkTextBox.Watermark>
							</xctk:WatermarkTextBox>

							<ComboBox Grid.Row="1" Grid.Column="3"
							          ItemsSource="{Binding DataContext.AllResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
							          SelectedItem="{Binding DataContext.SrchSelResult, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
							          DisplayMemberPath="Name" />
							<xctk:DateTimePicker Grid.Row="1" Grid.Column="4"
							                     TextAlignment="Left"
							                     Watermark="Executed after.."
							                     Format="Custom"
							                     FormatString="{x:Static models:Log.DateFormat}"
							                     Value="{Binding DataContext.SrchDate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}" />

							<StackPanel Grid.Row="1" Grid.Column="6" Orientation="Horizontal">
								<Button Content="Clear filters"
								        Command="{Binding DataContext.CmdClearFilter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}" />
							</StackPanel>

						</Grid>
					</TreeViewItem.Header>
				</TreeViewItem>

				<!-- Data rows -->
				<TreeView Grid.Row="1" ItemsSource="{Binding .}" BorderBrush="Gray" BorderThickness="0 1 0 0">
					<!--<TreeView.ItemContainerStyle>	
						<Style TargetType="{x:Type TreeViewItem}">
							<Setter Property="FontWeight" Value="Normal" />
							<Style.Triggers>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="FontWeight" Value="ExtraBold" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</TreeView.ItemContainerStyle>-->

					<TreeView.ItemTemplate>

						<!-- Level 0 - log overview -->
						<HierarchicalDataTemplate ItemsSource="{Binding History}">
							<Border HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Black" BorderThickness="0.5">
								<Grid Background="{Binding Log.ResultColor}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="{StaticResource SelectWidth}" />
										<ColumnDefinition Width="{StaticResource NameWidth}" />
										<!-- Placeholders for column of ToggleButton -->
										<ColumnDefinition Width="{StaticResource PlaceholderWidth}" />
										<ColumnDefinition Width="{StaticResource ResultWidth}" />
										<ColumnDefinition Width="{StaticResource StartTimeWidth}" />
										<ColumnDefinition Width="{StaticResource DurationWidth}" />
										<ColumnDefinition Width="{StaticResource CommandsWidth}" />
									</Grid.ColumnDefinitions>
									<CheckBox Grid.Column="0" IsChecked="{Binding Log.IsSelected, Mode=TwoWay}" />
									<TextBlock Grid.Column="1" Text="{Binding Log.Name}" Style="{StaticResource TextBlockStyle}" />
									<TextBlock Grid.Column="3" Text="{Binding Log.Result}" Style="{StaticResource TextBlockStyle}" />
									<TextBlock Grid.Column="4" Text="{Binding Log.StartTimeString}" Style="{StaticResource TextBlockStyle}" />
									<TextBlock Grid.Column="5" Text="{Binding Log.DurationString}" Style="{StaticResource TextBlockStyle}" />
									<StackPanel Grid.Column="6" Orientation="Horizontal">
										<Button Content="Show log"
										        Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
										        CommandParameter="{Binding Log.LogPath}" />
										<Button Content="Show dir"
										        Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
										        CommandParameter="{Binding Log.DirPath}"
										        Margin="5,0,0,0" />
										<Button Content="Rerun"
										        Command="{Binding DataContext.CmdRerun, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												IsEnabled="{Binding DataContext.IsRerunAvailable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
										        CommandParameter="{Binding Log}"
										        Margin="5,0,0,0" />
									</StackPanel>
								</Grid>
							</Border>


							<!--Level 1 - All expanded logs-->
							<HierarchicalDataTemplate.ItemTemplate>
								<HierarchicalDataTemplate>
									<Border HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Black" BorderThickness="0.2">
										<Grid Background="{Binding ResultColor}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{StaticResource SelectWidth}" />
												<ColumnDefinition Width="{StaticResource NameWidth}" />
												<!-- Placeholders for column of ToggleButton -->
												<ColumnDefinition Width="0" />
												<ColumnDefinition Width="{StaticResource ResultWidth}" />
												<ColumnDefinition Width="{StaticResource StartTimeWidth}" />
												<ColumnDefinition Width="{StaticResource DurationWidth}" />
												<ColumnDefinition Width="{StaticResource CommandsWidth}" />
											</Grid.ColumnDefinitions>
											<CheckBox Grid.Column="0" IsChecked="{Binding IsSelected, Mode=TwoWay}" />
											<TextBlock Grid.Column="1" Text="{Binding Name}" Style="{StaticResource TextBlockStyle}" />
											<TextBlock Grid.Column="3" Text="{Binding Result}" Style="{StaticResource TextBlockStyle}" />
											<TextBlock Grid.Column="4" Text="{Binding StartTimeString}" Style="{StaticResource TextBlockStyle}" />
											<TextBlock Grid.Column="5" Text="{Binding DurationString}" Style="{StaticResource TextBlockStyle}" />
											<StackPanel Grid.Column="6" Orientation="Horizontal">
												<Button Content="Show log"
												        Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding LogPath}" />
												<Button Content="Show dir"
												        Command="{Binding DataContext.CmdStartProcess, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
												        CommandParameter="{Binding DirPath}"
												        Margin="5,0,0,0" />
												<Button Content="Delete"
										        Command="{Binding DataContext.CmdDeleteOne, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:MvxWpfView}}"
										        CommandParameter="{Binding .}"
												Background="IndianRed"
										        Margin="5,0,0,0" />
											</StackPanel>
										</Grid>
									</Border>
								</HierarchicalDataTemplate>
							</HierarchicalDataTemplate.ItemTemplate>
						</HierarchicalDataTemplate>
					</TreeView.ItemTemplate>
				</TreeView>
			</Grid>
		</Border>
	</views:MvxWpfView.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="30" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<!--<ContentControl Grid.Row="0" Grid.ColumnSpan="6" Content="{StaticResource LogsTree}"
		                DataContext="{Binding Logs}" />-->


		<tlv:TreeListView AllowsColumnReorder="True">
			<!--Create an item template to specify the ItemsSource-->
			<tlv:TreeListView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}" />
			</tlv:TreeListView.ItemTemplate>
			<tlv:TreeListView.Columns>
				<!--Create the first column containing the expand button and the type name.-->
				<GridViewColumn Header="Name" Width="200">
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<!--The Expander Button (can be used in any column (typically the first one))-->
								<tlv:TreeListViewExpander/>
								<!--Display the name of the DataElement-->
								<TextBlock Text="{Binding}"/>
							</StackPanel>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
				<!--Create a second column containing the number of children.-->
				<GridViewColumn Header="Children" Width="100">
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<!--Display the size of the DataElement-->
							<TextBlock Text="{Binding Children.Count}" HorizontalAlignment="Right"/>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
				<!--Create a third column containing the brush of the material.-->
				<GridViewColumn Header="Brush" Width="100">
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<!--Border showing the actual color-->
								<Border Background="{Binding Brush}" CornerRadius="2"
                                    Width="16" Height="16"
                                    BorderThickness="1" BorderBrush="DarkGray"/>
								<!--Display the brush-->
								<TextBlock Text="{Binding Brush}"/>
							</StackPanel>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
			</tlv:TreeListView.Columns>
			<!--Create some sample data-->
			<MaterialGroup>
				<MaterialGroup>
					<DiffuseMaterial Brush="Blue"/>
					<DiffuseMaterial Brush="Red"/>
					<SpecularMaterial Brush="Orange"/>
				</MaterialGroup>
				<EmissiveMaterial Brush="AliceBlue"/>
			</MaterialGroup>
		</tlv:TreeListView>


		<Button Margin="5,5" Grid.Row="1" Grid.Column="0" Content="Settings" Command="{Binding CmdNavigateSettings}" />
		<Button Margin="5,5" Grid.Row="1" Grid.Column="1" Content="Export" Command="{Binding CmdExport}" />
		<Button Margin="5,5" Grid.Row="1" Grid.Column="2" Content="Export Directory" Command="{Binding CmdExportDir}" />
		<Button Margin="5,5" Grid.Row="1" Grid.Column="3" Content="Delete Selected" Command="{Binding CmdDeleteSelected}"  Background="IndianRed"/>
		<Button Margin="5,5" Grid.Row="1" Grid.Column="4" Content="{Binding RerunSelectedButtonName}" Command="{Binding CmdRerunSelected}" />
		<Button Margin="5,5" Grid.Row="1" Grid.Column="5" Content="Refresh" Command="{Binding CmdRefresh}" />
	</Grid>


</views:MvxWpfView>